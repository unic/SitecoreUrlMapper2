---
ID: "8b72abd1-8375-57c0-8791-31facf63b599"
Parent: "a204c3d6-a9ac-5ba6-bfee-5f58762bc823"
Template: "04646a89-996f-4ee7-878a-ffdbf1f0ef0d"
Path: "/sitecore/layout/Renderings/Project/urlmapper-jss-app/GraphQL-IntegratedDemo"
DB: master
SharedFields:
- ID: "037fe404-dd19-4bf7-8e30-4dadf68b27b0"
  Hint: componentName
  Value: "GraphQL-IntegratedDemo"
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: Office/16x16/graph_connection_directed.png
- ID: "1a7c85e5-dc0b-490d-9187-bb1dbcb4c72f"
  Hint: Datasource Template
  Value: "/sitecore/templates/Project/urlmapper-jss-app/GraphQL-IntegratedDemo"
- ID: "9c6106ea-7a5a-48e2-8cad-f0f693b1e2d4"
  Hint: __Read Only
  Type: Checkbox
  Value: 1
- ID: "b5b27af1-25ef-405c-87ce-369b3a004016"
  Hint: Datasource Location
  Value: "./Page Components|/sitecore/content/urlmapper-jss-app/Components/GraphQL-IntegratedDemo"
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "17bb046a-a32a-41b3-8315-81217947611b"
      Hint: ComponentQuery
      Value: |
        # This file contains a GraphQL query that will be executed and the result provided to
        # your JSS component. You can run this query in GraphiQL ($endpoint/ui) for a nice editing experience.
        
        # Note that we're executing _two queries_ (datasource and contextItem)
        # within the context of the IntegratedDemoQuery _operation_. This makes it
        # very efficient at gathering data from multiple sources.
        
        query IntegratedDemoQuery($datasource: String!, $contextItem: String!) {
          # Datasource query
          # $datasource will always be set to the ID of the rendering's datasource item
          # (as long as the GraphQLData helper is used)
          datasource(value: $datasource) {
            id
            name
            # Strongly-typed querying on known templates is possible!
            ...on GraphQLIntegratedDemo {
              # Single-line text field
              sample1 {
                # the 'jss' field is a JSON blob that represents the object that
                # should be passed to JSS field rendering helpers (i.e. text, image, link)
                jss
                value
              }
              # General Link field
              sample2 {
                jss
                # Structured querying of the field's values is possible
                text
                target
                url
                # Access to the template definition is possible
                definition {
                  type
                  shared
                }
              }
            }
          }
        
          # Context/route item query
          # $contextItem will always be set to the ID of the current context item (the route item)
          # (as long as the GraphQLData helper is used)
          contextItem: item(path: $contextItem) {
            id
            # Get the page title from the app route template
            ...on AppRoute {
              pageTitle {
                value
              }
            }
        
            # List the children of the current route
            children(requirePresentation: true) {
              id
              # typing fragments can be used anywhere!
              # so in this case, we're grabbing the 'pageTitle'
              # field on all child route items.
              ...on AppRoute {
                pageTitle {
                  value
                  jss
                }
              }
              url(options: { disableLanguageEmbedding: true })
            }
          }
        }
        
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20191231T071520Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\JssImport
